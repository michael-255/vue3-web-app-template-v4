import{Q as u}from"./QSelect-1164f6a3.js";import{q as m,t as _,$ as f,r as y,aa as g,D as h,V,P as b,bF as B,y as n,R as i,F,u as t,B as S,bG as T,T as k,E as d}from"./index-24dbccec.js";import{u as x}from"./action-b51c5118.js";import"./QItem-4a4784b7.js";import"./QItemLabel-2ad87e79.js";import"./QMenu-315589be.js";import"./selection-f172746f.js";const E=d("div",{class:"text-weight-bold text-body1"},"Tests",-1),v={key:0},w={key:1},D=d("p",null,"Tests that are stored by the Example record.",-1),j=m({__name:"FieldTestIds",props:{inspecting:{type:Boolean}},setup(I){const{log:l}=_(),s=x(),r=f.Values.testIds,c=y([]);g(async()=>{try{s.record[r]=s.record[r]??[];const e=await h.getRecords(V.Values.core,b.Values.test);c.value=e.map(o=>({value:o.id,label:`${o.name} (${B(o.id,8,"*")})`}))}catch(e){l.error("Error with test ids input",e)}});function p(e){return(e==null?void 0:e.join(", "))||"-"}return(e,o)=>(n(),i(k,null,[E,e.inspecting?(n(),i("div",v,F(p(t(s).record[t(r)])),1)):(n(),i("div",w,[D,S(u,{modelValue:t(s).record[t(r)],"onUpdate:modelValue":o[0]||(o[0]=a=>t(s).record[t(r)]=a),rules:[a=>t(T).safeParse(a).success||"Required"],options:c.value,counter:"",multiple:"","emit-value":"","map-options":"","options-dense":"",dense:"",outlined:"",color:"primary"},null,8,["modelValue","rules","options"])]))],64))}});export{j as default};
