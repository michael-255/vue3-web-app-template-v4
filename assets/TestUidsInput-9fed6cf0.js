import{Q as v}from"./QSelect-54bfbdb9.js";import{d as b,a as h,r as n,J as S,D as w,bz as D,c as Q,e as V,w as r,f as i,Q as x,l as u,t as d,h as c,i as B}from"./index-bcd0c63a.js";import{u as C}from"./action-7fb54c5b.js";import{u as R}from"./useRoutables-8e2fcfd3.js";import"./QItem-b53cd3c9.js";import"./QItemLabel-82f922ab.js";import"./QMenu-eb68067c.js";import"./selection-e8e07d3b.js";const k={class:"text-h6 q-mb-md"},M={class:"q-mb-md"},z=b({__name:"TestUidsInput",props:{field:null,label:null,desc:null,getDefault:{type:Function},validator:{type:Function},validationMessage:null},setup(o){const a=o,{routeType:p}=R(),{log:m}=h(),l=C(),f=n(null),s=n([]);S(async()=>{try{l.record[a.field]=l.record[a.field]??a.getDefault();const e=await w.getAllParentTypes(p);s.value=e.map(t=>({value:t.uid,label:`${t.name} (${D(t.uid,4,"*")})`}))}catch(e){m.error("Error with test uids input",e)}});function g(){return async e=>await a.validator(e)||a.validationMessage}return(e,t)=>(Q(),V(B,null,{default:r(()=>[i(x,null,{default:r(()=>[u("p",k,d(o.label),1),u("p",M,d(o.desc),1),i(v,{modelValue:c(l).record[o.field],"onUpdate:modelValue":t[0]||(t[0]=y=>c(l).record[o.field]=y),ref_key:"inputRef",ref:f,rules:[g()],options:s.value,counter:"",multiple:"","emit-value":"","map-options":"","options-dense":"",dense:"",outlined:"",color:"primary"},null,8,["modelValue","rules","options"])]),_:1})]),_:1}))}});export{z as default};
