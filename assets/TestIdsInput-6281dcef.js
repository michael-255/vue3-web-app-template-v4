import{Q as y}from"./QSelect-93c8366d.js";import{d as b,a as h,r as n,H as S,b as V,by as w,c as Q,e as x,w as r,f as i,Q as B,l as u,t as d,h as c,i as C}from"./index-e3c69f77.js";import{u as D}from"./action-ccc4df80.js";import{u as R}from"./useRoutables-53d778ec.js";import"./QItem-1157b8a8.js";import"./QItemLabel-ae7305d2.js";import"./QMenu-0157e0b4.js";import"./selection-0611069c.js";const k={class:"text-h6 q-mb-md"},M={class:"q-mb-md"},F=b({__name:"TestIdsInput",props:{field:null,label:null,desc:null,getDefault:{type:Function},validator:null,validationMessage:null},setup(o){const a=o,{routeType:m}=R(),{log:p}=h(),l=D(),f=n(null),s=n([]);S(async()=>{try{l.record[a.field]=l.record[a.field]??a.getDefault();const e=await V.getAll(m);s.value=e.map(t=>({value:t.id,label:`${t.name} (${w(t.id,4,"*")})`}))}catch(e){p.error("Error with test ids input",e)}});function g(){return async e=>await a.validator.isValid(e)||a.validationMessage}return(e,t)=>(Q(),x(C,null,{default:r(()=>[i(B,null,{default:r(()=>[u("p",k,d(o.label),1),u("p",M,d(o.desc),1),i(y,{modelValue:c(l).record[o.field],"onUpdate:modelValue":t[0]||(t[0]=v=>c(l).record[o.field]=v),ref_key:"inputRef",ref:f,rules:[g()],options:s.value,counter:"",multiple:"","emit-value":"","map-options":"","options-dense":"",dense:"",outlined:"",color:"primary"},null,8,["modelValue","rules","options"])]),_:1})]),_:1}))}});export{F as default};
