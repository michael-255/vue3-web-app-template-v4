import{l as L,I as E,al as a,W as M,aK as v,aG as m,D as i,V as d,X as b,aL as y}from"./index-368ec556.js";import{u as S}from"./useDialogs-2f18ff00.js";function P(){const{log:l}=L(),{confirmDialog:p}=S();function f(){const e=["Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega"];return e[Math.floor(Math.random()*e.length)]}function h(){const e="ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("");return e[Math.floor(Math.random()*e.length)]}function D(){return Math.random()>=.5}function R(){return Math.floor(Math.random()*100)}function T(){return Date.now()-m["One Year"]}async function g(){p("Load Default Examples","Would you like the load default Examples into the database?",E.INFO,"info",async()=>{try{const e=[],s=[],o=c=>{const n=a(),r=`Example - ${f()} ${h()}`,u=new M({id:n,createdTimestamp:Date.now(),name:r,desc:`${r} description.`,enabled:!0,favorited:D(),activated:!1,previous:void 0,testIds:[a(),a(),a()]});for(let t=0;t<c;t++)s.push(new v({id:a(),createdTimestamp:T()+m["One Day"]*t,activated:!1,parentId:n,note:`Example sub-record note ${t}`,percent:R()}));e.push(u)};o(360),o(2),o(0),await Promise.all([i.importRecords(d.EXAMPLES,e),i.importRecords(d.EXAMPLE_RESULTS,s)]),l.info("Default examples loaded")}catch(e){l.error("Failed to load defaults",e)}})}async function x(){p("Load Default Tests","Would you like the load default Tests into the database?",E.INFO,"info",async()=>{try{const e=[],s=[],o=c=>{const n=a(),r=`Test - ${f()} ${h()}`,u=new b({id:n,createdTimestamp:Date.now(),name:r,desc:`${r} description.`,enabled:!0,favorited:D(),activated:!1,previous:void 0});for(let t=0;t<c;t++)s.push(new y({id:a(),activated:!1,parentId:n,createdTimestamp:T()+m["One Day"]*t,note:`Test sub-record note ${t}`}));e.push(u)};o(1),o(0),await Promise.all([i.importRecords(d.TESTS,e),i.importRecords(d.TEST_RESULTS,s)]),l.info("Default tests loaded")}catch(e){l.error("Failed to load defaults",e)}})}return{onDefaultExamples:g,onDefaultTests:x}}export{P as u};
