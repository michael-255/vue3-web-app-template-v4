import{d as h,r as p,G as T,c as t,bD as E,n as b,v as x,f as d,h as c,w as i,j as u,Q as O,p as m,K as w,x as g,t as v,l as e,I as _,i as k,N as y,aR as l,m as V}from"./index-85cdcb14.js";import{u as C}from"./action-c39eed1c.js";const D={class:"text-h6 q-mb-md"},L=m("div",{class:"q-mb-md"}," Large text area for the child record to write notes that will get saved with the record. Previous notes can be viewed on the Dashboard. ",-1),I=h({__name:"ActionInputNote",props:{locked:{type:Boolean},label:null},setup(o){const a=C(),N=p(null);T(()=>{a.record[t.NOTE]=a.record[t.NOTE]??E[t.NOTE]()});function f(){return n=>typeof n=="string"&&n.trim().length<=l.MAX_NOTE_LENGTH||`Note cannot exceed ${l.MAX_NOTE_LENGTH} characters`}return(n,r)=>b((d(),c(V,null,{default:i(()=>[u(O,null,{default:i(()=>[m("div",D,[w(g(o.label)+" ",1),o.locked?(d(),c(v,{key:0,name:e(_).LOCK,color:"warning",class:"q-pb-xs"},null,8,["name"])):k("",!0)]),L,u(y,{modelValue:e(a).record[e(t).NOTE],"onUpdate:modelValue":r[0]||(r[0]=s=>e(a).record[e(t).NOTE]=s),ref_key:"inputRef",ref:N,rules:[f()],disable:o.locked,maxlength:e(l).MAX_NOTE_LENGTH,type:"textarea",autogrow:"",counter:"",dense:"",outlined:"",clearable:"",color:"primary",onBlur:r[1]||(r[1]=s=>e(a).record[e(t).NOTE]=e(a).record[e(t).NOTE].trim())},null,8,["modelValue","rules","disable","maxlength"])]),_:1})]),_:1},512)),[[x,!o.locked]])}});export{I as default};
