import{Q as u}from"./QSelect-436eab52.js";import{q as m,t as _,a0 as f,r as y,ab as g,D as h,W as V,P as b,bE as S,y as n,S as i,F as B,u as t,B as F,bF as E,U as k,E as d}from"./index-408197b4.js";import{u as x}from"./action-4701911f.js";import"./QItem-404b2f94.js";import"./QItemLabel-3e7d15e3.js";import"./QMenu-c4003d51.js";import"./selection-cd46e154.js";const T=d("div",{class:"text-weight-bold text-body1"},"Tests",-1),v={key:0},w={key:1},D=d("p",null,"Tests that are stored by the Example record.",-1),j=m({__name:"FieldTestIds",props:{inspecting:{type:Boolean}},setup(I){const{log:l}=_(),s=x(),r=f.Values.testIds,c=y([]);g(async()=>{try{s.record[r]=s.record[r]??[];const e=await h.getRecords(V.Values.core,b.Values.test);c.value=e.map(o=>({value:o.id,label:`${o.name} (${S(o.id,8,"*")})`}))}catch(e){l.error("Error with test ids input",e)}});function p(e){return(e==null?void 0:e.join(", "))||"-"}return(e,o)=>(n(),i(k,null,[T,e.inspecting?(n(),i("div",v,B(p(t(s).record[t(r)])),1)):(n(),i("div",w,[D,F(u,{modelValue:t(s).record[t(r)],"onUpdate:modelValue":o[0]||(o[0]=a=>t(s).record[t(r)]=a),rules:[a=>t(E).safeParse(a).success||"* Required"],options:c.value,counter:"",multiple:"","emit-value":"","map-options":"","options-dense":"",dense:"",outlined:"",color:"primary"},null,8,["modelValue","rules","options"])]))],64))}});export{j as default};
