import{Q as v}from"./QSelect-0601dbf0.js";import{d as y,a as b,r as n,H as S,b as h,T,bz as V,c as w,e as Q,w as r,f as i,Q as x,l as d,t as u,h as c,i as B}from"./index-0b61b6a2.js";import{u as C}from"./action-93f9abe9.js";import"./QItem-959a8b89.js";import"./QItemLabel-04de4c80.js";import"./QMenu-89f359f7.js";import"./selection-ac59acaf.js";const D={class:"text-h6 q-mb-md"},R={class:"q-mb-md"},I=y({__name:"TestIdsInput",props:{field:null,label:null,desc:null,getDefault:{type:Function},validator:null,validationMessage:null},setup(a){const o=a,{log:m}=b(),l=C(),p=n(null),s=n([]);S(async()=>{try{l.record[o.field]=l.record[o.field]??o.getDefault();const e=await h.getAll(T.TEST_PARENT);s.value=e.map(t=>({value:t.id,label:`${t.name} (${V(t.id,4,"*")})`}))}catch(e){m.error("Error with test ids input",e)}});function f(){return async e=>await o.validator.isValid(e)||o.validationMessage}return(e,t)=>(w(),Q(B,null,{default:r(()=>[i(x,null,{default:r(()=>[d("p",D,u(a.label),1),d("p",R,u(a.desc),1),i(v,{modelValue:c(l).record[a.field],"onUpdate:modelValue":t[0]||(t[0]=g=>c(l).record[a.field]=g),ref_key:"inputRef",ref:p,rules:[f()],options:s.value,counter:"",multiple:"","emit-value":"","map-options":"","options-dense":"",dense:"",outlined:"",color:"primary"},null,8,["modelValue","rules","options"])]),_:1})]),_:1}))}});export{I as default};
