import{Q as v}from"./QSelect-9ad54696.js";import{d as y,a as _,r,L as b,b as S,T as h,bz as T,c as V,e as w,w as l,f as n,Q,l as i,t as d,h as u,i as B}from"./index-34385d75.js";import{u as C}from"./action-64237db6.js";import"./QItem-8221db63.js";import"./QItemLabel-76074834.js";import"./QMenu-77f70e3f.js";import"./selection-7ecaabc7.js";const D={class:"text-h6 q-mb-md"},R={class:"q-mb-md"},L=y({__name:"TestIdsInput",props:{field:{},label:{},desc:{},getDefault:{type:Function},validator:{},validationMessage:{}},setup(p){const o=p,{log:c}=_(),a=C(),m=r(null),s=r([]);b(async()=>{try{a.record[o.field]=a.record[o.field]??o.getDefault();const e=await S.getAll(h.TEST_PARENT);s.value=e.map(t=>({value:t.id,label:`${t.name} (${T(t.id,4,"*")})`}))}catch(e){c.error("Error with test ids input",e)}});function f(){return async e=>await o.validator.isValid(e)||o.validationMessage}return(e,t)=>(V(),w(B,null,{default:l(()=>[n(Q,null,{default:l(()=>[i("p",D,d(e.label),1),i("p",R,d(e.desc),1),n(v,{modelValue:u(a).record[e.field],"onUpdate:modelValue":t[0]||(t[0]=g=>u(a).record[e.field]=g),ref_key:"inputRef",ref:m,rules:[f()],options:s.value,counter:"",multiple:"","emit-value":"","map-options":"","options-dense":"",dense:"",outlined:"",color:"primary"},null,8,["modelValue","rules","options"])]),_:1})]),_:1}))}});export{L as default};
